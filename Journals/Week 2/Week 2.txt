Exercise 1:
1- db.ads.find({Classification: "Motor Cars"})
3- db.ads.find({Price: {$lt:  "1500"}})
2- db.ads.find({Manufacturer: "Fiat", Colour: "Red"}, {_id: 0, Price: 1, Colour:1 })
Exercise 2:
Aggregations:
1- db.ads.count() /  db.ads.countDocuments()
3- db.ads.distinct("Model")
Exercise 3:
1- db.ads.countDocuments({"Classification" : "Motor Cars"})
2- db.ads.distinct("Classification")
3a- db.ads.find(
	{Classification: "Motor Cars"}, {Milage: 1}
  ) . limit(1) .sort({Milage: 1})

3b- db.ads.aggregate([
	{$match: {Classification: "Motor Cars"}},
	{$group: {_id: "$Classification", LowestMileage: {$min: "$Milage"}}}])

Exercise 4:
1- db.ads.aggregate([
	{$match: {Classification: "Clothes"}},
	{$group: {_id: "$Classification", ExpensiveItem: {$max: "$Price"}}}]) /
 db.ads.aggregate([
  { $addFields: { Price: { $toDouble: "$Price" } } },
  { $match: { Classification: "Clothes" } },
  { $sort: { Price: -1 } },
  { $limit: 1 },
  { $project: { _id: 0 } }
])
2- db.ads.updateOne(
  { "Clothing Type": "Shirt", Colour: "Red", Price: "20.31" },
  { $set: { Sold: true } }
)
3- db.ads.find({Classification: "Clothing"}, {sold: {$ne: true}}).count()
Exercise 5:
1- db.ads.aggregate([{$match: {Colour: "Red"}}, {$count: "Count"}])
2- db.ads.aggregate([{$match: {Colour: "Red"}}, {$group: {_id: "$Colour", Percentage: {$sum: 1}}}])
3- db.ads.aggregate([
  {$match: {Classification: "Clothes"}},
  {$group: {_id: "$Clothing Type", TotalRevenue: {$sum: {$convert: {input: "$Price", to: "double"}}}}}
])
Exercise 6:
1- db.ads.find({Classification: "Motor Cars", Milage: {$gt: "50000"}}).count()
2 and 3- db.ads.aggregate([
  { $match: { Classification: "Motor Cars", Milage: { $gt: "50000" } } },
  { $set: {
      UpdatedPrice: { $add: [
        { $toDouble: "$Price" },
        { $multiply: [0.05, { $toDouble: "$Price" }] }
      ] }
  } },
  { $project: {
      Manufacturer: 1,
      Milage: 1,
      Price: 1,
      Classification: 1,
      UpdatedPrice: 1
  } }
])
